QR分解


线性代数








A

=


[



1


2




3


4



]




{\displaystyle \mathbf {A} ={\begin{bmatrix}1&2\\3&4\end{bmatrix}}}





向量 · 向量空间  · 行列式  · 矩阵


向量


标量 · 向量 · 向量空间 · 向量投影 · 外积 · 内积 · 数量积 · 向量积




矩阵与行列式


矩阵 · 行列式 · 线性方程组 · 秩 · 核 · 迹 · 单位矩阵 · 初等矩阵 · 方块矩阵 · 分块矩阵 · 三角矩阵 · 非奇异方阵 · 转置矩阵 · 逆矩阵 · 对角矩阵 · 可对角化矩阵 · 对称矩阵 · 反对称矩阵 · 正交矩阵 · 幺正矩阵 · 埃尔米特矩阵 · 反埃尔米特矩阵 · 正规矩阵 · 伴随矩阵 · 余因子矩阵 · 共轭转置 · 正定矩阵 · 幂零矩阵 · 矩阵分解 （LU分解 · 奇异值分解 · QR分解 · 极分解 · 特征分解） · 子式和余子式 · 拉普拉斯展开 ·




线性空间与线性变换


线性空间 · 线性变换 · 线性子空间 · 线性生成空间 · 基 · 线性映射 · 线性投影 · 线性无关 · 线性组合 · 线性泛函 · 行空间与列空间 · 对偶空间 · 正交 · 特征向量 · 最小二乘法 · 格拉姆-施密特正交化 ·








查
论
编





QR分解法是三种将矩阵分解的方式之一。这种方式，把矩阵分解成一个半正交矩阵与一个上三角矩阵的积。QR分解经常用来解线性最小二乘法问题。QR分解也是特定特征值算法即QR算法的基础。



目录


1 定义
2 QR分解的求法

2.1 Gram-Schmidt正交化
2.2 使用Householder变换


3 Matlab



定义[编辑]
实数矩阵A的QR分解是把A分解为





A
=
Q
R
,



{\displaystyle A=QR,\,}



这里的Q是正交矩阵（意味着QTQ = I）而R是上三角矩阵。类似的，我们可以定义A的QL, RQ和LQ分解。
更一般的说，我们可以因数分解复数



m


{\displaystyle m}

×



n


{\displaystyle n}

矩阵（有着m ≥ n）为



m


{\displaystyle m}

×



n


{\displaystyle n}

 酉矩阵（在Q∗Q = I的意义上）和



n


{\displaystyle n}

×



n


{\displaystyle n}

上三角矩阵的乘积。
如果A是非奇异的，且限定R 的对角线元素为正，则这个因数分解是唯一的。
QR分解的求法[编辑]
QR分解的实际计算有很多方法，例如Givens旋转、Householder变换，以及Gram-Schmidt正交化等等。每一种方法都有其优点和不足。
Gram-Schmidt正交化[编辑]

参见Gram-Schmidt正交化

使用Householder变换[编辑]
Householder变换将一个向量关于某个平面或者超平面进行反射。我们可以利用这个操作对



m
×
n
(
m
≧
n
)


{\displaystyle m\times n(m\geqq n)}

的矩阵



A


{\displaystyle A}

进行QR分解。
矩阵



Q


{\displaystyle Q}

可以被用于对一个向量以一种特定的方式进行反射变换，使得它除了一个维度以外的其他所有分量都化为0。
令




x



{\displaystyle \mathbf {x} }

为矩阵



A


{\displaystyle A}

的任一m维实行向量，且有



∥

x

∥
=

|

α

|



{\displaystyle \|\mathbf {x} \|=|\alpha |}

（其中



α


{\displaystyle \alpha }

为标量）。若该算法是通过浮点数实现的，则



α


{\displaystyle \alpha }

应当取和




x



{\displaystyle \mathbf {x} }

的第



k


{\displaystyle k}

维相反的符号（其中




x

k




{\displaystyle x_{k}}

是要保留不为0的项），这样做可以避免精度缺失。对于复数的情况，令





α
=
−


e



i

arg
⁡

x

k




∥

x

∥


{\displaystyle \alpha =-\mathrm {e} ^{\mathrm {i} \arg x_{k}}\|\mathbf {x} \|}



（Stoer & Bulirsch 2002，p.225），并且在接下来矩阵



Q


{\displaystyle Q}

的构造中要将矩阵转置替换为共轭转置。
接下来，设





e


1




{\displaystyle \mathbf {e} _{1}}

为单位向量



(
1
,
0
,
⋯
,
0

)

T




{\displaystyle (1,0,\cdots ,0)^{T}}

，||·||为欧几里的范数，



I


{\displaystyle I}

为



m
×
m


{\displaystyle m\times m}

单位矩阵，令






u

=

x

−
α


e


1


,


{\displaystyle \mathbf {u} =\mathbf {x} -\alpha \mathbf {e} _{1},}







v

=



u


∥

u

∥



,


{\displaystyle \mathbf {v} ={\mathbf {u}  \over \|\mathbf {u} \|},}






Q
=
I
−
2

v



v


T


.


{\displaystyle Q=I-2\mathbf {v} \mathbf {v} ^{T}.}



或者，若



A


{\displaystyle A}

为复矩阵，则





Q
=
I
−
(
1
+
w
)

v



v


H




{\displaystyle Q=I-(1+w)\mathbf {v} \mathbf {v} ^{H}}

，其中



w
=


x


H



v



/




v


H



x



{\displaystyle w=\mathbf {x} ^{H}\mathbf {v} \mathbf {/} \mathbf {v} ^{H}\mathbf {x} }


式中





x


H




{\displaystyle \mathbf {x} ^{H}}

是



x


{\displaystyle x}

的共轭转置（亦称埃尔米特共轭或埃尔米特转置）。

则



Q


{\displaystyle Q}

为一个



m
×
m


{\displaystyle m\times m}

的Householder矩阵，它满足





Q

x

=
(
α
,
0
,
⋯
,
0

)

T


.



{\displaystyle Q\mathbf {x} =(\alpha ,0,\cdots ,0)^{T}.\,}



利用Householder矩阵，可以将一个



m
×
n


{\displaystyle m\times n}

的矩阵




A
′



{\displaystyle A'}

变换为上三角矩阵。 首先，我们将A左乘通过选取矩阵的第一行得到行向量



x


{\displaystyle x}

的Householder矩阵




Q

1




{\displaystyle Q_{1}}

。这样，我们得到的矩阵




Q

1


A


{\displaystyle Q_{1}A}

的第一行将全部为0（第一列除外）：






Q

1


A
=


[




α

1




⋆


…


⋆




0







⋮




A
′






0






]




{\displaystyle Q_{1}A={\begin{bmatrix}\alpha _{1}&\star &\dots &\star \\0&&&\\\vdots &&A'&\\0&&&\end{bmatrix}}}



这个过程对于矩阵




A
′



{\displaystyle A'}

（即




Q

1


A


{\displaystyle Q_{1}A}

排除第一行和第一列之后剩下的方阵）还可以继续做下去，从而得到另一个Householder矩阵




Q

2




{\displaystyle Q_{2}}

。注意到




Q

2




{\displaystyle Q_{2}}

其实比




Q

1




{\displaystyle Q_{1}}

要小，因为它是在




Q

1


A


{\displaystyle Q_{1}A}

而非



A


{\displaystyle A}

的基础上得到的。因此，我们需要在




Q

2




{\displaystyle Q_{2}}

的左上角补上1，或者，更一般地来说：






Q

k


=


(




I

k
−
1




0




0



Q

k

′




)


.


{\displaystyle Q_{k}={\begin{pmatrix}I_{k-1}&0\\0&Q_{k}'\end{pmatrix}}.}



将这个迭代过程进行



t


{\displaystyle t}

次之后（



t
=
min
(
m
−
1
,
n
)


{\displaystyle t=\min(m-1,n)}

）,将有





R
=

Q

t


⋯

Q

2



Q

1


A


{\displaystyle R=Q_{t}\cdots Q_{2}Q_{1}A}



其中R为一个上三角矩阵。因此，令





Q
=

Q

1


T



Q

2


T


⋯

Q

t


T


,


{\displaystyle Q=Q_{1}^{T}Q_{2}^{T}\cdots Q_{t}^{T},}



则



A
=
Q
R


{\displaystyle A=QR}

为矩阵



A


{\displaystyle A}

的一个QR分解。
相比与Gram-Schmidt正交化，使用Householder变换具有更好的数值稳定性。
Matlab[编辑]
MATLAB以qr函数来执行QR分解法，其语法为

[Q,R]=qr(A)


其中Q代表正规正交矩阵，
而R代表上三角形矩阵。

此外，原矩阵A不必为正方矩阵； 如果矩阵A大小为m*n，则矩阵Q大小为m*m，矩阵R大小为m*n。




分类：矩阵分解